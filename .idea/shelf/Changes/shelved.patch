Index: cheat/routing.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cheat/routing.py b/cheat/routing.py
new file mode 100644
--- /dev/null	(date 1655392119779)
+++ b/cheat/routing.py	(date 1655392119779)
@@ -0,0 +1,6 @@
+from django.urls import re_path
+from app01 import consumers
+
+websocket_urlpatterns = [
+    re_path(r'room/(?P<group>\w+)/$',consumers.ChatConsumer.as_asgi())
+]
\ No newline at end of file
Index: app01/consumers.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app01/consumers.py b/app01/consumers.py
new file mode 100644
--- /dev/null	(date 1655449634956)
+++ b/app01/consumers.py	(date 1655449634956)
@@ -0,0 +1,17 @@
+from channels.generic.websocket import WebsocketConsumer
+from channels.exceptions import StopConsumer
+CONN_LIST=[]
+class ChatConsumer(WebsocketConsumer):
+    def websocket_connect(self,message):
+
+        self.accept()
+        CONN_LIST.append(self)
+
+    def websocket_receive(self,message):
+        text=message['text']
+        for conn in CONN_LIST:
+            conn.send(text)
+
+
+    def websocket_disconnect(self,message):
+        raise StopConsumer()
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1655355744426)
+++ b/.idea/.gitignore	(date 1655355744426)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: template/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/template/index.html b/template/index.html
new file mode 100644
--- /dev/null	(date 1655446680618)
+++ b/template/index.html	(date 1655446680618)
@@ -0,0 +1,36 @@
+<!DOCTYPE html>
+<html>
+	<head>
+		<meta charset="utf-8">
+		<title></title>
+
+	</head>
+	<body>
+
+
+	<div>
+
+			<span>talk</span>
+		<input type="text" name="comment" id="txt">
+		<br>
+		<input type="submit" onclick="sendmessage()">
+
+	</div>
+    <div id="message">
+
+    </div>
+    <script>
+        socket=new WebSocket("ws://127.0.0.1:8000/room/123/");
+        function sendmessage(){
+            let tag=document.getElementById("txt")
+            socket.send(tag.value);
+        }
+        socket.onmessage=function(event){
+            let tag=document.createElement("div");
+            tag.innerText=event.data;
+            document.getElementById("message").appendChild(tag);
+        }
+
+    </script>
+    </body>
+</html>
\ No newline at end of file
Index: .idea/cheat.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/cheat.iml b/.idea/cheat.iml
new file mode 100644
--- /dev/null	(date 1655355764843)
+++ b/.idea/cheat.iml	(date 1655355764843)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="django" name="Django">
+      <configuration>
+        <option name="rootFolder" value="$MODULE_DIR$" />
+        <option name="settingsModule" value="cheat/settings.py" />
+        <option name="manageScript" value="$MODULE_DIR$/manage.py" />
+        <option name="environment" value="&lt;map/&gt;" />
+        <option name="doNotUseTestRunner" value="false" />
+        <option name="trackFilePattern" value="migrations" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/venv" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+  <component name="TemplatesService">
+    <option name="TEMPLATE_CONFIGURATION" value="Django" />
+    <option name="TEMPLATE_FOLDERS">
+      <list>
+        <option value="$MODULE_DIR$/../cheat\templates" />
+      </list>
+    </option>
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1655355764851)
+++ b/.idea/modules.xml	(date 1655355764851)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/cheat.iml" filepath="$PROJECT_DIR$/.idea/cheat.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1655355764867)
+++ b/.idea/misc.xml	(date 1655355764867)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9 (cheat)" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(date 1655355764875)
+++ b/.idea/inspectionProfiles/profiles_settings.xml	(date 1655355764875)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: app01/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app01/admin.py b/app01/admin.py
new file mode 100644
--- /dev/null	(date 1655355968378)
+++ b/app01/admin.py	(date 1655355968378)
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
Index: app01/apps.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app01/apps.py b/app01/apps.py
new file mode 100644
--- /dev/null	(date 1655355968378)
+++ b/app01/apps.py	(date 1655355968378)
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class App01Config(AppConfig):
+    default_auto_field = 'django.db.models.BigAutoField'
+    name = 'app01'
Index: app01/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app01/models.py b/app01/models.py
new file mode 100644
--- /dev/null	(date 1655355968378)
+++ b/app01/models.py	(date 1655355968378)
@@ -0,0 +1,3 @@
+from django.db import models
+
+# Create your models here.
Index: app01/tests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app01/tests.py b/app01/tests.py
new file mode 100644
--- /dev/null	(date 1655355968378)
+++ b/app01/tests.py	(date 1655355968378)
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
Index: manage.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/manage.py b/manage.py
new file mode 100644
--- /dev/null	(date 1655355743259)
+++ b/manage.py	(date 1655355743259)
@@ -0,0 +1,22 @@
+#!/usr/bin/env python
+"""Django's command-line utility for administrative tasks."""
+import os
+import sys
+
+
+def main():
+    """Run administrative tasks."""
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'cheat.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
+
+
+if __name__ == '__main__':
+    main()
Index: app01/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app01/views.py b/app01/views.py
new file mode 100644
--- /dev/null	(date 1655383992226)
+++ b/app01/views.py	(date 1655383992226)
@@ -0,0 +1,4 @@
+from django.shortcuts import render
+def index(request):
+    return render(request,'index.html')
+# Create your views here.
Index: cheat/asgi.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cheat/asgi.py b/cheat/asgi.py
new file mode 100644
--- /dev/null	(date 1655379647409)
+++ b/cheat/asgi.py	(date 1655379647409)
@@ -0,0 +1,21 @@
+"""
+ASGI config for cheat project.
+
+It exposes the ASGI callable as a module-level variable named ``application``.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/4.0/howto/deployment/asgi/
+"""
+
+import os
+
+from django.core.asgi import get_asgi_application
+from channels.routing import ProtocolTypeRouter,URLRouter
+from. import routing
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'cheat.settings')
+
+application =ProtocolTypeRouter({
+    "http":get_asgi_application(),
+    "websocket":URLRouter(routing.websocket_urlpatterns),
+})
Index: cheat/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cheat/settings.py b/cheat/settings.py
new file mode 100644
--- /dev/null	(date 1655538993036)
+++ b/cheat/settings.py	(date 1655538993036)
@@ -0,0 +1,129 @@
+"""
+Django settings for cheat project.
+
+Generated by 'django-admin startproject' using Django 4.0.5.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/4.0/topics/settings/
+
+For the full list of settings and their values, see
+https://docs.djangoproject.com/en/4.0/ref/settings/
+"""
+import os
+from pathlib import Path
+
+# Build paths inside the project like this: BASE_DIR / 'subdir'.
+BASE_DIR = Path(__file__).resolve().parent.parent
+
+
+# Quick-start development settings - unsuitable for production
+# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/
+
+# SECURITY WARNING: keep the secret key used in production secret!
+SECRET_KEY = 'django-insecure-dw5&*%612opu($bufd_e08dvj_qla@+c_d@%@&gn&k-nq1=^je'
+
+# SECURITY WARNING: don't run with debug turned on in production!
+DEBUG = True
+
+ALLOWED_HOSTS = ["*"]
+
+
+# Application definition
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    'channels',
+    'app01.apps.App01Config'
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'cheat.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [
+os.path.join(BASE_DIR, 'template')
+        ]
+        ,
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'cheat.wsgi.application'
+ASGI_APPLICATION = 'cheat.asgi.application'
+
+
+# Database
+# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': BASE_DIR / 'db.sqlite3',
+    }
+}
+
+
+# Password validation
+# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators
+
+AUTH_PASSWORD_VALIDATORS = [
+    {
+        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
+    },
+]
+
+
+# Internationalization
+# https://docs.djangoproject.com/en/4.0/topics/i18n/
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_TZ = True
+
+
+# Static files (CSS, JavaScript, Images)
+# https://docs.djangoproject.com/en/4.0/howto/static-files/
+
+STATIC_URL = 'static/'
+
+# Default primary key field type
+# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field
+
+DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
Index: cheat/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cheat/urls.py b/cheat/urls.py
new file mode 100644
--- /dev/null	(date 1655382991743)
+++ b/cheat/urls.py	(date 1655382991743)
@@ -0,0 +1,23 @@
+"""cheat URL Configuration
+
+The `urlpatterns` list routes URLs to views. For more information please see:
+    https://docs.djangoproject.com/en/4.0/topics/http/urls/
+Examples:
+Function views
+    1. Add an import:  from my_app import views
+    2. Add a URL to urlpatterns:  path('', views.home, name='home')
+Class-based views
+    1. Add an import:  from other_app.views import Home
+    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
+Including another URLconf
+    1. Import the include() function: from django.urls import include, path
+    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
+"""
+from django.contrib import admin
+from django.urls import path
+from app01 import views
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+    path('index/',views.index),
+]
Index: cheat/wsgi.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cheat/wsgi.py b/cheat/wsgi.py
new file mode 100644
--- /dev/null	(date 1655355743259)
+++ b/cheat/wsgi.py	(date 1655355743259)
@@ -0,0 +1,16 @@
+"""
+WSGI config for cheat project.
+
+It exposes the WSGI callable as a module-level variable named ``application``.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/4.0/howto/deployment/wsgi/
+"""
+
+import os
+
+from django.core.wsgi import get_wsgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'cheat.settings')
+
+application = get_wsgi_application()
diff --git a/db.sqlite3 b/db.sqlite3
new file mode 100644
diff --git a/app01/__init__.py b/app01/__init__.py
new file mode 100644
diff --git a/app01/migrations/__init__.py b/app01/migrations/__init__.py
new file mode 100644
diff --git a/cheat/__init__.py b/cheat/__init__.py
new file mode 100644
